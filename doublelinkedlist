#include<stdio.h>
#include<stdlib.h>

struct node{
 int data;
 struct node*next;
 struct node*prev;

};


struct node *create_doublelinkedlist(struct node *head)
{
struct node *new_node, *ptr;
int num;
printf("\n Enter â€“1 to end");
printf("\n Enter the data : ");
scanf("%d", &num);
while(num != -1)
{
 if(head == NULL)
 {
 new_node = (struct node*)malloc(sizeof(struct node));
 new_node -> prev = NULL;
 new_node -> data = num;
 new_node -> next = NULL;
 head = new_node;
 }
 else
 {
 ptr=head;
 new_node = (struct node*)malloc(sizeof(struct node));
 new_node->data=num;
 while(ptr->next!=NULL)
 ptr = ptr->next;
 ptr->next = new_node;
 new_node->prev=ptr;
 new_node->next=NULL;
 }
 printf("\n Enter the data : ");
 scanf("%d", &num);
}
return head;
}


struct node *insert_atleft(struct node *head)
{
struct node *new_node;
int num;
printf("\n Enter the data : ");
scanf("%d", &num);
new_node = (struct node *)malloc(sizeof(struct node));
new_node -> data = num;
head -> prev = new_node;
new_node -> next = head;
new_node -> prev = NULL;
head = new_node;
printf("Value inserted at the end of the list\n");
return head;
}

struct node* delete_atvalue(struct node *head )
{
    struct node  *temp;
    int val;
    printf("Enter the value\n");
    scanf("%d",&val);
    temp = head;
    while(temp -> data != val){
    temp = temp -> next;


    }
    if(temp -> next == NULL)
    {
      temp->prev->next=NULL;
      free(temp);
    }


    else
    {

        temp ->prev->next = temp-> next;
        temp-> next->prev = temp->prev;
        free(temp);
        printf("Node Deleted\n");
    }

    return head;
}

 void display(struct node*head){

   struct node*p=head;
   while(p!=NULL){
    printf("%d\t\t",p->data);
    p=p->next;
   }

 }






int main(){

struct node *head=NULL;

         int choice=-1;
     printf("Select the options\n");

     do{
     printf("\n1.Creation of List\n");
     printf("2.Insert at the left\n");
      printf("3.Delete at the given value\n");
       printf("4.Display\n");
        printf("Enter your choice\n");
        scanf("%d",&choice);
        switch(choice){



        case 1: head=create_doublelinkedlist(head);
                display(head);
                 break;


        case 2: head=insert_atleft(head);
                display(head);
                break;

        case 3: head= delete_atvalue(head);
                display(head);
                break;

        case 4:  display(head);
                  break;

        }




}while(choice!=5);




return 0;
}
